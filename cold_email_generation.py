# -*- coding: utf-8 -*-
"""Cold Email Generation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AKsgBAJXezkS5DOzaitbMsk9QcVV2XqM
"""
from langchain_groq import ChatGroq
import pandas as pd
import uuid
from langchain_core.output_parsers import JsonOutputParser
from langchain_core.prompts import PromptTemplate
from langchain_community.document_loaders import WebBaseLoader

llm = ChatGroq(
    model="llama-3.1-70b-versatile",
    temperature=0,
    groq_api_key="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"
)

response=llm.invoke("The first person to land on the moon was...")
print(response.content)

import chromadb
client=chromadb.Client()
collection=client.create_collection("my_collection")

collection.add(
    documents=[
        'This document is about New York',
        'This document is about California',
        'This document is about Washington'
    ],
    ids=['id1','id2','id3']
)
all_docs=collection.get()
all_docs

results=collection.query(
    query_texts=['Query is about Tech Companies'],
n_results=2
)
results

loader = WebBaseLoader('https://jobs.nike.com/job/R-38694?from=job%20search%20funnel')
page_data=loader.load().pop().page_content
page_data

prompt_extract=PromptTemplate.from_template(
    """
    ### SCRAPED TEXT FROM WEBSITE:
    {page_data}
    ### INSTRUCTION:
    The scraped text is from the careers page of a website.
    Your job is to extract the job postings and return them in a JSON format containing
    following keys: 'role','experience','skills',and 'description'.
    Only return valid JSON.
    ### VALID JSON (NO PREAMBLE)
    """
)
chain_extract=prompt_extract|llm
res=chain_extract.invoke({'page_data':page_data})
print(res.content)

json_parser=JsonOutputParser()
json_res=json_parser.parse(res.content)
json_res

type(json_res)

df=pd.read_csv('/content/drive/MyDrive/my_portfolio.csv')
df.head()

client = chromadb.PersistentClient('vectorstore')
collection = client.get_or_create_collection(name='portfolio')

if not collection.count():
    for _,row in df.iterrows():
        collection.add(documents=row["Techstack"],
        metadatas={'links':row["Links"]},
        ids=[str(uuid.uuid4())])

links=collection.query(query_texts=["skills"],n_results=2).get('metadatas')
links

job=json_res
job['skills']

prompt_email = PromptTemplate.from_template(
    """
    ### JOB DESCRIPTION:
    {job_description}

    ### INSTRUCTION:
    You are Mohan, a business development executive at AtliQ. AtliQ is an 
    AI & Software Consulting company dedicated to facilitating the 
    seamless integration of business processes through automated tools.
    Over our experience, we have empowered numerous enterprises with 
    tailored solutions, fostering scalability, process optimization, 
    cost reduction, and heightened overall efficiency.
    Your job is to write a cold email to the client regarding the job 
    mentioned above describing the capability of StarCom in fulfilling 
    their needs.
    Also add the most relevant ones from the following links to 
    showcase StarCom's portfolio: {link_list}
    Remember you are Astika, BDE at StarCom.
    Do not provide a preamble.

    ### EMAIL (NO PREAMBLE):
    """
)
chain_email = prompt_email | llm
res=chain_email.invoke({'job_description':str(job),'link_list':links})
print(res.content)
